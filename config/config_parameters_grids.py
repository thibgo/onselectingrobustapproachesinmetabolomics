parameters_grid = {
     "RF": [
            {
                "name": "n_estimators",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "max_depth",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "min_samples_split",
                "type": "range",
                "bounds": [0.000000000001, 0.5],
                "value_type": "float",
            },
            {
                "name": "class_weight",
                "type": "fixed",
                "value_type": "str",
                "value": 'balanced',
            },
            {
                "name": "max_features",
                "type": "range",
                "bounds": [0.01, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
            {
                "name": "max_samples",
                "type": "range",
                "bounds": [0.01, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
    ],
    "rSCM": [
            {
                "name": "n_estimators",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "max_features",
                "type": "range",
                "bounds": [0.01, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
            {
                "name": "max_samples",
                "type": "range",
                "bounds": [0.01, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
            {
                "name": "max_rules",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
                "log_scale": True,
            },
            {
                "name": "model_type",
                "type": "choice",
                "value_type": "str",
                "values": ['conjunction', 'disjunction'],
                "is_ordered": False,
                #"sort_values": False,
            },
            {
                "name": "p",
                "type": "range",
                "bounds": [0.1, 10.0],
                "value_type": "float",
                "log_scale": True,
            },
    ],
    "DT": [
            {
                "name": "max_depth",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "min_samples_split",
                "type": "range",
                "bounds": [0.000000000001, 0.5],
                "value_type": "float",
            },
            {
                "name": "class_weight",
                "type": "fixed",
                "value_type": "str",
                "value": 'balanced',
            },
    ],
    "SCM": [
            {
                "name": "max_rules",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
                "log_scale": True,
            },
            {
                "name": "model_type",
                "type": "choice",
                "value_type": "str",
                "values": ['conjunction', 'disjunction'],
                "is_ordered": False,
            },
            {
                "name": "p",
                "type": "range",
                "bounds": [0.1, 10.0],
                "value_type": "float",
                "log_scale": True,
            },
    ],
    "SVMlinear": [
            {
                "name": "penalty",
                "type": "fixed",
                "value": "l2",
            },
            {
                "name": "loss",
                "type": "choice",
                "value_type": "str",
                "values": ['hinge', 'squared_hinge'],
                "is_ordered": False,
            },
            {
                "name": "dual",
                "type": "fixed",
                "value": "auto",
            },
            {
                "name": "class_weight",
                "type": "fixed",
                "value": 'balanced',
            },
            {
                "name": "C",
                "type": "range",
                "bounds": [10**(-6), 10**6],
                "value_type": "float",
                "log_scale": True,
            },
    ],
    "SVMrbf": [
            {
                "name": "kernel",
                "type": "fixed",
                "value": "rbf",
            },
            {
                "name": "class_weight",
                "type": "fixed",
                "value": 'balanced',
            },
            {
                "name": "C",
                "type": "range",
                "bounds": [10**(-6), 10**6],
                "value_type": "float",
                "log_scale": True,
            },
    ],
    "AdaBoost": [
            {
                "name": "n_estimators",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "learning_rate",
                "type": "range",
                "bounds": [0.1, 2.0],
                "value_type": "float",
                "log_scale": True,
            },
    ],
    "SCMBoost": [
            {
                "name": "n_estimators",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "learning_rate",
                "type": "range",
                "bounds": [0.1, 2.0],
                "value_type": "float",
                "log_scale": True,
            },
            {
                "name": "algorithm",
                "type": "fixed",
                "value": 'SAMME',
            },
            {
                "name": "p",
                "type": "range",
                "bounds": [0.1, 10.0],
                "value_type": "float",
                "log_scale": True,
            },
            {
                "name": "max_rules",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
                "log_scale": True,
            },
            {
                "name": "model_type",
                "type": "choice",
                "value_type": "str",
                "values": ['conjunction', 'disjunction'],
                "is_ordered": False,
            },
    ],
    "GBtree": [
            {
                "name": "n_estimators",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "learning_rate",
                "type": "range",
                "bounds": [0.1, 2.0],
                "value_type": "float",
                "log_scale": True,
            },
            {
                "name": "max_features",
                "type": "range",
                "bounds": [0.01, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
            {
                "name": "subsample",
                "type": "range",
                "bounds": [0.01, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
            {
                "name": "min_samples_split",
                "type": "range",
                "bounds": [0.000000000001, 0.5],
                "value_type": "float",
            },
            {
                "name": "max_depth",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
    ],
    "PLSDA": [
            {
                "name": "n_components",
                "type": "range",
                "bounds": [1, 10],
                "value_type": "int",
            },
    ],
    "XGBoost": [
            {
                "name": "n_estimators",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
            {
                "name": "learning_rate",
                "type": "range",
                "bounds": [0.001, 1],
                "value_type": "float",
                "log_scale": True,
            },
            {
                "name": "max_depth",
                "type": "range",
                "bounds": [1, 100],
                "value_type": "int",
            },
    ],
    "dummy": [
            {
                "name": "strategy",
                "type": "fixed",
                "value": "prior",
                "value_type": "str",
            },
    ],
    "NaiveBayes": [
            {
                "name": "var_smoothing",
                "type": "fixed",
                "value": 1e-9,
                "value_type": "float",
            },
    ],
    "ElasticNet": [
            {
                "name": "penalty",
                "type": "fixed",
                "value": "elasticnet",
                "value_type": "str",
            },
            {
                "name": "solver",
                "type": "fixed",
                "value": "saga",
                "value_type": "str",
            },
            {
                "name": "C",
                "type": "range",
                "bounds": [10**(-6), 10**6],
                "value_type": "float",
                "log_scale": True,
            },
            {
                "name": "l1_ratio",
                "type": "range",
                "bounds": [0.0, 1.0],
                "value_type": "float",
                "log_scale": False,
            },
    ],
}

